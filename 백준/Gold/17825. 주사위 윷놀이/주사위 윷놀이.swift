let dice = readLine()!.split { $0 == " " }.compactMap{Int(String($0))}
let lut = [
  [0,1,2,3,4,5],
  [2,2,3,4,5,6],
  [4,3,4,5,6,7],
  [6,4,5,6,7,8],
  [8,5,6,7,8,9],
  [10,21,22,23,24,25],
  [12,7,8,9,10,11],
  [14,8,9,10,11,12],
  [16,9,10,11,12,13],
  [18,10,11,12,13,14],
  [20,27,28,24,25,26],
  [22,12,13,14,15,16],
  [24,13,14,15,16,17],
  [26,14,15,16,17,18],
  [28,15,16,17,18,19],
  [30,29,30,31,24,25],
  [32,17,18,19,20,32],
  [34,18,19,20,32,32],
  [36,19,20,32,32,32],
  [38,20,32,32,32,32],
  [40,32,32,32,32,32],
  [13,22,23,24,25,26],
  [16,23,24,25,26,20],
  [19,24,25,26,20,32],
  [25,25,26,20,32,32],
  [30,26,20,32,32,32],
  [35,20,32,32,32,32],
  [22,28,24,25,26,20],
  [24,24,25,26,20,32],
  [28,30,31,24,25,26],
  [27,31,24,25,26,20],
  [26,24,25,26,20,32],
  [0,32,32,32,32,32]
]

var mx = 0
func dfs(_ idx: Int, _ sm: Int, _ horses: [Int]) {
  if idx == 10 {
    mx = max(mx, sm)
    return
  }

  var horses = horses

  for i in 0..<4 {
    let cx = horses[i]
    let nx = lut[cx][dice[idx]]
    let score = lut[nx][0]
    
    if horses.contains(nx) && nx != 32 { continue }  // 어떤 말이 있으면 skip

    horses[i] = nx
    dfs(idx + 1, sm + score, horses)
    horses[i] = cx
  }
}

dfs(0,0,[0,0,0,0])
print(mx)